program MJProgram
	int x, y;
	const bool  falseConst = false, trueConst = true;
	const int cet = 4; 
	bool z;
	enum Broj { JEDAN = 1, DVA , TRI, CETIRI, PET, SEST = 6, SEDAM, OSAM, DEVET }
	enum Boja { CRNA, BELA, PLAVA }
	int niz[];
{	

	char enumBrojToChar(Broj broj) { 
		if (broj == Broj.JEDAN) {
			return '1';
		}
		else if (broj == Broj.DVA) {
			return '2';
		}
		else if (broj == Broj.TRI) {
			return '3';
		}
		else if (broj == Broj.CETIRI) {
			return '4';
		}
		else if (broj == Broj.PET) {
			return '5';
		}
		else if (broj == Broj.SEST) {
			return '6';
		}
		else if (broj == Broj.SEDAM) {
			return '7';
		}
		else if (broj == Broj.OSAM) {
			return '8';
		}
		else {
			return '9';
		}
	}
	
	void initBrojevi(Broj b[]) {
		b[0] = Broj.SEDAM;
		b[1] = Broj.DVA;
		b[2] = Broj.DEVET;
		b[3] = Broj.SEST;
		b[4] = Broj.TRI;
	}
	
	int sum(int g, int j) 
	{
		return g + j;
	}
	
	void selectionSort(int niz[], int n, bool desc) int i, j, p; {
		if (n > 0 && niz != null) {
			for (i = 0; i < n - 1; i++) 
				for (j = i + 1; j < n; j++)
					if (desc) {
						if (niz[j] > niz[i]) {
							p = niz[j];
							niz[j] = niz[i];
							niz[i] = p;
						}
					}
					else {
						if (niz[j] < niz[i]) {
							p = niz[j];
							niz[j] = niz[i];
							niz[i] = p;
						}
					}
		}
	}
	
	void main() 
		char l; 
		Broj brojevi[]; 
		int n, i;
		int m4; 
	{
		m4 = -cet;
		n = 5;
		brojevi = new Broj[n];
		initBrojevi(brojevi);
		for (i = 0; i < n; i++) {
			l = enumBrojToChar(brojevi[i]);
			print(l);
		}
		
		i = n -1;
		print(eol);
		for(;;) {
			l = enumBrojToChar(brojevi[i]);
			print(l);
			i--;
			if (i < 0) break;
		}
	
	
		niz = new int[Broj.SEDAM];
		n = m4;
		niz[0] = 80; niz[1] = 42; niz[2] = 4; niz[3]= m4; niz[-n] = -53; niz[5] = 12; niz[6] = 0;
		print(eol);
		for(i = 0; i < Broj.SEDAM; i++) 
			print(niz[i]);
			
		print(eol);
		selectionSort(niz, Broj.SEDAM, false);
		
		for(i = 0; i < Broj.SEDAM; i++) 
			print(niz[i]);
		
		print(eol);
		selectionSort(niz, Broj.SEDAM, true); 
		for (i = 0; i < Broj.SEDAM; i++)
			print(niz[i]);
		
		print(eol);
		
		x = 5 + (6 * 6) / Broj.DVA + Boja.PLAVA; //x = 25
		niz[Boja.BELA] = x;
		print(niz[1]);
		print(Broj.DVA);		

		x = sum(Broj.SEST, sum(2 , Boja.CRNA)); //x = 8
		niz[4] = x;
		print(niz[4]);
		niz[3] = -niz[4]; // niz[3] = -8
		print(niz[3]);
		return;
	}
}